plugins {
  id 'fabric-loom' version '1.6-SNAPSHOT'
  id 'maven-publish'
}

group = project.maven_group
version = project.mod_version

base {
    archivesName = project.archives_base_name
}

repositories {
  maven { url = "https://maven.shedaniel.me/" } // Cloth Config, REI
  maven { url = "https://api.modrinth.com/maven" } // LazyDFU
  maven { url = "https://maven.terraformersmc.com/releases/" } // Mod Menu
  maven { url = "https://mvn.devos.one/snapshots/" } // Create, Porting Lib, Forge Tags, Milk Lib, Registrate
  maven { url = "https://mvn.devos.one/releases/" } // Porting Lib Releases
  maven { url = "https://raw.githubusercontent.com/Fuzss/modresources/main/maven/" } // Forge Config API Port
  maven { url = "https://maven.jamieswhiteshirt.com/libs-release" } // Reach Entity Attributes
  maven { url = "https://jitpack.io/" } // Mixin Extras, Fabric ASM
  maven { url = "https://maven.tterrag.com/" } // Flywheel

  maven {
    name = "Valkyrien Skies Internal"
    url = 'https://maven.valkyrienskies.org'
  }
}

fabricApi {
  configureDataGeneration()
}

dependencies {
  // To change the versions see the gradle.properties file
  minecraft "com.mojang:minecraft:${project.minecraft_version}"
  mappings loom.officialMojangMappings()
  modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

  // Fabric API. This is technically optional, but you probably want it anyway.
  modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

  // Create - dependencies are added transitively
  modImplementation("com.simibubi.create:create-fabric-${project.minecraft_version}:${project.create_version}")

  // Development QOL
  modImplementation("com.terraformersmc:modmenu:${project.modmenu_version}")
  modImplementation("me.shedaniel.cloth:cloth-config:${project.cloth_config_version}")
  modLocalRuntime("maven.modrinth:lazydfu:${project.lazydfu_version}")

  // Kotlin
  modImplementation("net.fabricmc:fabric-language-kotlin:1.10.10+kotlin.1.9.10")
  api "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.7.21"
  api "org.jetbrains.kotlin:kotlin-reflect:1.7.21"

  // Valkyrien Skies 2
  modApi("org.valkyrienskies:valkyrienskies-120-fabric:${project.vs2_version}") { transitive = false }

  modApi("org.valkyrienskies.core:api:${project.vs_core_version}")
  modApi("org.valkyrienskies.core:api-game:${project.vs_core_version}")
  modApi("org.valkyrienskies.core:util:${project.vs_core_version}")
  modApi("org.valkyrienskies.core:impl:${project.vs_core_version}")

  // Porting Lib - Config module
  modImplementation("io.github.fabricators_of_create.Porting-Lib:config:${project.portinglib_config_version}")
}

processResources {
  Map<String, ?> properties = Map.of(
    "version", version,
    "fabric_loader_version", loader_version,
    "fabric_api_version", fabric_version,
    "create_version", create_version,
    "minecraft_version", minecraft_version
  )

  inputs.properties(properties)

  filesMatching("fabric.mod.json") {
    expand properties
  }
}

tasks.withType(JavaCompile).configureEach {
  it.options.release = 17
}

java {
  // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
  // if it is present.
  // If you remove this line, sources will not be generated.
  withSourcesJar()

  sourceCompatibility = JavaVersion.VERSION_17
  targetCompatibility = JavaVersion.VERSION_17
}

jar {
  from("LICENSE") {
    rename { "${it}_${project.base.archivesName.get()}"}
  }
}

// configure the maven publication
publishing {
  publications {
    create("mavenJava", MavenPublication) {
      artifactId = project.archives_base_name
      from components.java
    }
  }

  // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
  repositories {
    // Add repositories to publish to here.
    // Notice: This block does NOT have the same function as the block in the top level.
    // The repositories here will be used for publishing your artifact, not for
    // retrieving dependencies.
  }
}